define(["angular"],function(e){var l=e.module("bg.selector",[]);l.directive("bgSelector",["$document","$parse",function(l,t){var n=function(e,l){l=l||[];for(var t=l.length,n=0;t>n;n++){var o=l[n];if(o===e)return!0}return!1};return{scope:{},controller:["$scope","$element","$attrs","$transclude",function(e,l,t,n){var o=this;o.options=[],o.open=!1,o.hideChoiceList=function(){o.open=!1},o.toggleChoiceList=function(){o.open=!o.open},o.setSelectorLabel=function(e){o.label=e},o.addOption=function(e){o.options.push(e)}}],controllerAs:"selector",require:["bgSelector","ngModel"],restrict:"E",template:function(e,l){l.ngModel;return'<div class="bg-selector-container"><div class="bg-selector-bar"><div class="bg-selector-content" ng-bind-template="{{selector.label}}"></div><div class="bg-selector-icon" ng-class="{true: \'open\'}[selector.open]"></div></div><div class="bg-choice-list" ng-show="selector.open"></div></div>'},replace:!0,transclude:!0,link:function(o,c,a,i,r){var s=i[0],u=i[1],d=a.placeholder||"请选择",p=e.element(c[0].querySelector(".bg-choice-list")),b=e.element(c[0].querySelector(".bg-selector-bar"));s.onSelectCallback=t(a.onSelect)(o.$parent),b.bind("click",function(e){s.toggleChoiceList(),o.$apply(),e.stopPropagation()}),l.bind("click",function(e){s.open&&s.hideChoiceList(),o.$apply()}),o.$parent.$watch(a.ngModel,function(e){n(e,s.options)?o.$broadcast("bgs:change",e):(s.clearValue(),console.log("not exist"))}),s.setValue=function(e,l){u.$setViewValue(e),s.setSelectorLabel(l)},s.getValue=function(){return u.$modelValue},s.clearValue=function(){u.$setViewValue(null),s.setSelectorLabel(d)},r(function(e){p.append(e)}),s.clearValue(),console.log("init and clear value")}}}]),l.directive("bgOption",["$parse",function(e){return{priority:-1,controller:["$scope","$element","$attrs","$transclude",function(l,t,n,o){var c=this;c.value=e(n.value)(l),c.label=e(n.label)(l)}],controllerAs:"option",require:["bgOption","^bgSelector"],restrict:"E",template:'<div class="bg-selector-choice"></div>',replace:!0,transclude:!0,link:function(e,l,t,n,o){var c=n[0],a=n[1];l.bind("click",function(){var e=c.value,l=c.label;l||(e="请选择"),a.setValue(e,l),a.hideChoiceList(),a.onSelectCallback&&a.onSelectCallback(e,l)}),c.value===a.getValue()&&a.setSelectorLabel(c.label),e.$on("bgs:change",function(e,l){l===c.value&&a.setSelectorLabel(c.label)}),a.addOption(c.value),e.$watch(t.value,function(e,l){l&&e!==l&&(c.value=e,a.clearValue())}),e.$watch(t.label,function(e,l){l&&e!==l&&(c.label=e,a.clearValue())}),o(function(e){l.append(e)})}}}])});
//# sourceMappingURL=data:application/json;base64,
